type User {
  id: ID! @id
  email: String! @unique
  name: String!
  phone: String! @unique
  stamp: Int! @default(value: 0)
  reviews: [Review!]! @relation(name: "ReviewAuthor", onDelete: SET_NULL)
  fundingAuthor: [Funding!]!
    @relation(name: "FundingAuthor", onDelete: SET_NULL)
  fundingInvest: [Funding!]!
    @relation(name: "FundingInvestor", onDelete: SET_NULL)
  bookingCourse: [Course!]! @relation(name: "BookingUser", onDelete: SET_NULL)
}

type Category {
  id: ID! @id
  title: String!
  subtitle: String!
  bannerImage: String
  openingDate: DateTime!
  closingDate: DateTime!
  openingTime: DateTime!
  closingTime: DateTime!
  courses: [Course!]! @relation(name: "CourseCategory", onDelete: SET_NULL)
}

type Course {
  id: ID! @id
  title: String
  images: String
  number: Int!
  courseLength: Float
  prevStation: String!
  departureStation: String!
  nextStation: String!
  courseRoute: [String!]! @scalarList(strategy: RELATION)
  departureTime: DateTime!
  departureArea: String!
  capacity: Int!
  category: Category @relation(name: "CourseCategory", onDelete: SET_NULL)
  bookingUsers: [User!]! @relation(name: "BookingUser", onDelete: SET_NULL)
  reviews: [Review!]! @relation(name: "CourseReview", onDelete: SET_NULL)
}

type Review {
  id: ID! @id
  createdAt: DateTime! @createdAt
  content: String!
  image: String
  course: Course! @relation(name: "CourseReview", onDelete: SET_NULL)
  author: User! @relation(name: "ReviewAuthor", onDelete: SET_NULL)
}

type Funding {
  id: ID! @id
  title: String!
  emoji: String
  author: User! @relation(name: "FundingAuthor", onDelete: SET_NULL)
  content: String!
  createdAt: DateTime! @createdAt
  deadline: DateTime
  investors: [User!]! @relation(name: "FundingInvestor", onDelete: SET_NULL)
}
